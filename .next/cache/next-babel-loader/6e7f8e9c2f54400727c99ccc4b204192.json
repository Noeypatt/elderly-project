{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noeypatt\\\\Documents\\\\elderly-nextjs\\\\components\\\\chart\\\\chart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sheetapi from '../../config/api';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\nvar data = [{}];\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"list\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(value) {\n        var list;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Sheetapi.getSheetValues(_this.access_token, value);\n\n              case 3:\n                list = _context.sent;\n\n                _this.setState({\n                  data: {\n                    list: list\n                  }\n                });\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var userOauth;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                userOauth = JSON.parse(localStorage.getItem(\"myOauth\"));\n                this.access_token = userOauth.data.access_token;\n                _context2.next = 4;\n                return this.list('!B1:D');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data);\n      return __jsx(\"div\", {\n        className: \"warp-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(LineChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(CartesianGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(XAxis, {\n        dataKey: \"\\u0E08\\u0E31\\u0E07\\u0E2B\\u0E27\\u0E31\\u0E14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), __jsx(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), __jsx(Line, {\n        type: \"monotone\",\n        dataKey: \"\\u0E0A\\u0E32\\u0E2260\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n        stroke: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), __jsx(Line, {\n        type: \"monotone\",\n        dataKey: \"\\u0E2B\\u0E0D\\u0E34\\u0E0760\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\Noeypatt\\Documents\\elderly-nextjs\\components\\chart\\chart.js"],"names":["React","Sheetapi","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","data","Chart","props","value","getSheetValues","access_token","list","setState","console","log","state","userOauth","JSON","parse","localStorage","getItem","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,EACmEC,aADnE,QAEO,UAFP;AAIA,IAAMC,IAAI,GAAG,CAAC,EAAD,CAAb;;IACMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA,+BAiBZ,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGgBZ,QAAQ,CAACa,cAAT,CAAwB,MAAKC,YAA7B,EAA2CF,KAA3C,CAHhB;;AAAA;AAGGG,gBAAAA,IAHH;;AAKC,sBAAKC,QAAL,CAAc;AACVP,kBAAAA,IAAI,EAAE;AAACM,oBAAAA,IAAI,EAAJA;AAAD;AADI,iBAAd;;AALD;AAAA;;AAAA;AAAA;AAAA;AAaCE,gBAAAA,OAAO,CAACC,GAAR;;AAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjBY;;AAAA;AAAA;AAAA;AAAA;;AAGf,UAAKC,KAAL,GAAa;AACTV,MAAAA,IAAI,EAAE;AADG,KAAb;AAHe;AAMlB;;;;;;;;;;;;;AAIOW,gBAAAA,S,GAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,C;AAChB,qBAAKV,YAAL,GAAoBM,SAAS,CAACX,IAAV,CAAeK,YAAnC;;uBACM,KAAKC,IAAL,CAAU,OAAV,C;;;;;;;;;;;;;;;;;;6BAuBD;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWV,IAAvB;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAW,QAAA,KAAK,EAAE,GAAlB;AAAuB,QAAA,MAAM,EAAE,GAA/B;AAAoC,QAAA,IAAI,EAAEA,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,sEAA9B;AAA8C,QAAA,MAAM,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,4EAA9B;AAA+C,QAAA,MAAM,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ,CADJ;AAcH;;;;EArDeV,KAAK,CAAC0B,S;;AAwD1B,eAAef,KAAf","sourcesContent":["import React from 'react'\r\nimport Sheetapi from '../../config/api'\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\r\n} from 'recharts';\r\n\r\nconst data = [{}]\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"))\r\n        this.access_token = userOauth.data.access_token\r\n        await this.list('!B1:D')\r\n\r\n\r\n    }\r\n\r\n    list = async (value) => {\r\n\r\n        try {\r\n          let list = await Sheetapi.getSheetValues(this.access_token, value)\r\n\r\n            this.setState({\r\n                data: {list}\r\n            })\r\n           \r\n            \r\n    \r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.data);\r\n\r\n        return (\r\n            <div className=\"warp-chart\">\r\n                <LineChart width={500} height={300} data={data}>\r\n                    <CartesianGrid />\r\n\r\n                    <XAxis dataKey=\"จังหวัด\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"ชาย60ปีขึ้นไป\" stroke=\"#8884d8\" />\r\n                    <Line type=\"monotone\" dataKey=\"หญิง60ปีขึ้นไป\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}