{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noeypatt\\\\Documents\\\\elderly-nextjs\\\\components\\\\chart\\\\chart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sheetapi from '../../config/api';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\nconst data = [{}];\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"list\", async value => {\n      try {\n        this.list = await Sheetapi.getSheetValues(this.access_token, value);\n\n        for (let i = 0; i < this.list.length; i++) {\n          this.setState({\n            data: _Object$assign({}, this.list[i])\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    this.state = {\n      data: [],\n      ar: []\n    };\n  }\n\n  async componentDidMount() {\n    let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"));\n    this.access_token = userOauth.data.access_token;\n    await this.list('!B1:D');\n  }\n\n  render() {\n    console.log(this.state.data);\n    return __jsx(\"div\", {\n      className: \"warp-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(CartesianGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(XAxis, {\n      dataKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), __jsx(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), __jsx(Line, {\n      type: \"monotone\",\n      dataKey: \"\\u0E0A\\u0E32\\u0E2260\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n      stroke: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), __jsx(Line, {\n      type: \"monotone\",\n      dataKey: \"\\u0E2B\\u0E0D\\u0E34\\u0E0760\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\Noeypatt\\Documents\\elderly-nextjs\\components\\chart\\chart.js"],"names":["React","Sheetapi","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","data","Chart","Component","constructor","props","value","list","getSheetValues","access_token","i","length","setState","err","console","log","state","ar","componentDidMount","userOauth","JSON","parse","localStorage","getItem","render"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,EACmEC,aADnE,QAEO,UAFP;AAIA,MAAMC,IAAI,GAAG,CAAC,EAAD,CAAb;;AACA,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,kCAkBZ,MAAOC,KAAP,IAAiB;AAEpB,UAAI;AAEA,aAAKC,IAAL,GAAY,MAAMf,QAAQ,CAACgB,cAAT,CAAwB,KAAKC,YAA7B,EAA2CH,KAA3C,CAAlB;;AAKA,aAAI,IAAII,CAAC,GAAE,CAAX,EAAeA,CAAC,GAAC,KAAKH,IAAL,CAAUI,MAA3B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,eAAKE,QAAL,CAAc;AACVX,YAAAA,IAAI,EAAE,eAAc,EAAd,EAAiB,KAAKM,IAAL,CAAUG,CAAV,CAAjB;AADI,WAAd;AAIH;AAMJ,OAlBD,CAkBE,OAAOG,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ,KA1CkB;;AAGf,SAAKG,KAAL,GAAa;AACTf,MAAAA,IAAI,EAAE,EADG;AAETgB,MAAAA,EAAE,EAAC;AAFM,KAAb;AAIH;;AAED,QAAMC,iBAAN,GAA0B;AAEtB,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,SAAKd,YAAL,GAAoBU,SAAS,CAAClB,IAAV,CAAeQ,YAAnC;AACA,UAAM,KAAKF,IAAL,CAAU,OAAV,CAAN;AAGH;;AA4BDiB,EAAAA,MAAM,GAAG;AACbV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWf,IAAvB;AAEQ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAE,GAAlB;AAAuB,MAAA,MAAM,EAAE,GAA/B;AAAoC,MAAA,IAAI,EAAE,KAAKe,KAAL,CAAWf,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,MAAC,KAAD;AAAO,MAAA,OAAO,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAMI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,sEAA9B;AAA8C,MAAA,MAAM,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,4EAA9B;AAA+C,MAAA,MAAM,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ;AAgBH;;AAhE+B;;AAmEpC,eAAeC,KAAf","sourcesContent":["import React from 'react'\r\nimport Sheetapi from '../../config/api'\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\r\n} from 'recharts';\r\n\r\nconst data = [{}]\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            ar:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"))\r\n        this.access_token = userOauth.data.access_token\r\n        await this.list('!B1:D')\r\n\r\n\r\n    }\r\n\r\n    list = async (value) => {\r\n\r\n        try {\r\n\r\n            this.list = await Sheetapi.getSheetValues(this.access_token, value)\r\n\r\n        \r\n\r\n\r\n            for(let i= 0 ; i<this.list.length ; i++){\r\n                this.setState({\r\n                    data: Object.assign({},this.list[i])  ,\r\n                })\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\nconsole.log(this.state.data);\r\n\r\n        return (\r\n            <div className=\"warp-chart\">\r\n                <LineChart width={500} height={300} data={this.state.data}>\r\n                    <CartesianGrid />\r\n\r\n\r\n                    <XAxis dataKey=\"0\" />\r\n\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"ชาย60ปีขึ้นไป\" stroke=\"#8884d8\" />\r\n                    <Line type=\"monotone\" dataKey=\"หญิง60ปีขึ้นไป\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}