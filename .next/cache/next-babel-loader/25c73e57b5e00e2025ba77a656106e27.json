{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noeypatt\\\\Documents\\\\elderly-nextjs\\\\components\\\\chart\\\\barchart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass Barchart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"list\", async value => {\n      try {\n        this.list = await Sheetapi.getSheetValues(this.access_token, value);\n\n        for (let i = 0; i < this.list.length; i++) {\n          let value = await {\n            name: this.list[i][0],\n            ชาย60ปีขึ้นไป: this.list[i][1],\n            หญิง60ปีขึ้นไป: this.list[i][2]\n          };\n          this.setState(prevState => ({\n            data: [...prevState.data, value]\n          }));\n        }\n\n        this.state.isLoad = false;\n        console.log('data', this.state.data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    this.state = {\n      data: [],\n      ar: [],\n      isLoad: true\n    };\n  }\n\n  async componentDidMount() {\n    let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"));\n    this.access_token = userOauth.data.access_token;\n    await this.list('!B2:D');\n  }\n\n  render() {\n    const {\n      data,\n      isLoad\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"warp-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(BarChart, {\n      width: 1000,\n      height: 500,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), __jsx(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), __jsx(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), __jsx(Bar, {\n      dataKey: \"\\u0E0A\\u0E32\\u0E2260\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), __jsx(Bar, {\n      dataKey: \"\\u0E2B\\u0E0D\\u0E34\\u0E0760\\u0E1B\\u0E35\\u0E02\\u0E36\\u0E49\\u0E19\\u0E44\\u0E1B\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Barchart;","map":{"version":3,"sources":["C:\\Users\\Noeypatt\\Documents\\elderly-nextjs\\components\\chart\\barchart.js"],"names":["React","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Barchart","Component","constructor","props","value","list","Sheetapi","getSheetValues","access_token","i","length","name","ชาย60ปีขึ้นไป","หญิง60ปีขึ้นไป","setState","prevState","data","state","isLoad","console","log","err","ar","componentDidMount","userOauth","JSON","parse","localStorage","getItem","render","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\n\r\n\r\nclass Barchart extends React.Component {\r\n   \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            ar: [],\r\n            isLoad: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"))\r\n        this.access_token = userOauth.data.access_token\r\n        await this.list('!B2:D')\r\n    }\r\n\r\n    list = async (value) => {\r\n\r\n        try {\r\n\r\n            this.list = await Sheetapi.getSheetValues(this.access_token, value)\r\n\r\n            for (let i = 0; i < this.list.length; i++) {\r\n                let value = await { name: this.list[i][0], ชาย60ปีขึ้นไป: this.list[i][1], หญิง60ปีขึ้นไป: this.list[i][2] }\r\n                this.setState(prevState => ({\r\n                    data: [...prevState.data, value]\r\n                }))\r\n            }\r\n            this.state.isLoad = false\r\n            console.log('data', this.state.data)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n    \r\n    render() { \r\n\r\n        const { data, isLoad } = this.state\r\n    \r\n        return (\r\n            <div className=\"warp-chart\"> \r\n                <BarChart\r\n                    width={1000}\r\n                    height={500}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5, right: 30, left: 20, bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"ชาย60ปีขึ้นไป\" fill=\"#8884d8\" />\r\n                    <Bar dataKey=\"หญิง60ปีขึ้นไป\" fill=\"#82ca9d\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Barchart;"]},"metadata":{},"sourceType":"module"}