{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3608fd4508479189eafb.hot-update.js","sources":["webpack:///./components/chart/chart.js"],"sourcesContent":["import React from 'react'\r\nimport Sheetapi from '../../config/api'\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\r\n} from 'recharts';\r\n\r\n\r\nconst XXX = [\r\n    {\r\n        name: 'Page A', uv: 4000, pv: 2400, \r\n    },\r\n    {\r\n        name: 'Page B', uv: 3000, pv: 1398, \r\n    },\r\n    {\r\n        name: 'Page C', uv: 2000, pv: 9800, \r\n    },\r\n    {\r\n        name: 'Page D', uv: 2780, pv: 3908, \r\n    },\r\n    {\r\n        name: 'Page E', uv: 1890, pv: 4800, \r\n    },\r\n    {\r\n        name: 'Page F', uv: 2390, pv: 3800,\r\n    },\r\n    {\r\n        name: 'Page G', uv: 3490, pv: 4300\r\n    },\r\n];\r\n\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            ar: [],\r\n            isLoad: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let userOauth = JSON.parse(localStorage.getItem(\"myOauth\"))\r\n        this.access_token = userOauth.data.access_token\r\n        await this.list('!B2:D')\r\n    }\r\n\r\n    list = async (value) => {\r\n\r\n        try {\r\n\r\n            this.list = await Sheetapi.getSheetValues(this.access_token, value)\r\n\r\n            for (let i = 0; i < this.list.length; i++) {\r\n                let value = await { name: this.list[i][0], uv: this.list[i][1], pv: this.list[i][2] }\r\n                this.setState(prevState => ({\r\n                    data: [...prevState.data, value]\r\n                }))\r\n            }\r\n            list = this.state.data\r\n            this.state.isLoad = false\r\n            console.log('data', this.state.data)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, isLoad } = this.state\r\n        return (\r\n            <div>\r\n                {\r\n                    data ?\r\n\r\n                        <div className=\"warp-chart\">\r\n                            {/* <LineChart width={1000} height={500} data={data}>\r\n                                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                <XAxis dataKey=\"name\" padding={{ left: 5, right: 5 }} />\r\n                                <YAxis  dataKey=\"ชาย60ปีขึ้นไป\" />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"ชาย60ปีขึ้นไป\" stroke=\"#8884d8\" activeDot={{ r: 8 }}/>\r\n                                <Line type=\"monotone\" dataKey=\"หญิง60ปีขึ้นไป\" stroke=\"#82ca9d\" />\r\n                            </LineChart> */}\r\n\r\n                            <LineChart width={500} height={300} data={list}>\r\n                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"ชาย60ปีขึ้นไป\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                                <Line type=\"monotone\" dataKey=\"หญิง60ปีขึ้นไป\" stroke=\"#82ca9d\" />\r\n                            </LineChart>\r\n                        </div>\r\n                        : null\r\n                }\r\n\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AAEA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AADA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AARA;AAOA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAYA;AACA;AACA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;;;;;;;;;;AAGA;AACA;;AACA;AACA;;;;;;;;;;;;;;;;;AAuBA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AA1EA;AACA;AA4EA;;;;;;;A","sourceRoot":""}